#!/bin/sh


# Use encrypted backend if dbus connection to xdg-desktop-portal Secret is available
dbus-send --session --print-reply --dest=org.freedesktop.portal.Desktop /org/freedesktop/portal/desktop org.freedesktop.DBus.Properties.Get string:"org.freedesktop.portal.Secret" string:"version" > /dev/null 2>&1

if [ $? -eq 0 ]; then
  PASSWORD_STORE=xdg-desktop-portal
else
  PASSWORD_STORE=
fi

# if there is a snap connection to chromium-ffmpeg we will see a directory in the root
if [ -d "$SNAP/chromium-ffmpeg/" ]; then
    LD_LIBRARY_PATH=$SNAP/chromium-ffmpeg/:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH
fi

# Convinces Vivaldi it's running from this path - fixes Exec= entries in generated .desktop files
export CHROME_WRAPPER=/snap/bin/${SNAP_INSTANCE_NAME}.vivaldi-stable

# Detect distro and distro version and export as $DISTRO_NAME $DISTRO_VERSION_NUMBER

# Cleanup in case the user exported these variable names already (since they are quite generic in their naming)
unset ID
unset VERSION_ID

# Check that /etc/os-release or fallback to /usr/lib/os-release are present and readable
OS_RELEASE_FILE=""
if [ -r /etc/os-release ]; then
  OS_RELEASE_FILE="/etc/os-release"
elif [ -r /usr/lib/os-release ]; then
  OS_RELEASE_FILE="/usr/lib/os-release"
fi

# Parse os-release line by line
ID=""
VERSION_ID=""
if [ -n "$OS_RELEASE_FILE" ]; then
  while IFS='=' read -r key value; do
    case "$key" in
      ID) ID="${value%\"}"; ID="${ID#\"}" ;;
      VERSION_ID) VERSION_ID="${value%\"}"; VERSION_ID="${VERSION_ID#\"}" ;;
    esac
  done < "$OS_RELEASE_FILE"
fi

# In cases where $ID and $VERSION_ID are not set provide sensible defaults
[ -z "${ID:-}" ] && ID=linux
[ -z "${VERSION_ID:-}" ] && VERSION_ID="$(uname -r | tr -cd '[:alnum:]._-')"

# Export these values with less generic names
export VIVALDI_DISTRO_NAME="$ID"
export VIVALDI_DISTRO_VERSION_NUMBER="$VERSION_ID"

exec "$SNAP/opt/vivaldi/vivaldi" --password-store=$PASSWORD_STORE "$@"
